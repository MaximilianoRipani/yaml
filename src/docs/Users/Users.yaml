paths:
  /api/users/:
    get:
      summary: Obtener todos los usuarios 
      tags: 
        - Users
      responses:
        '200':
          description: Usuarios obtenidos correctamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '500':
          description: Error al obtener usuarios
    post:
      summary: Crear un nuevo usuario
      tags:
        - Users
      parameters:
        - name: body
          in: body
          required: true
          chema:
            type: object
            properties:
              first_name:
                type: string
              last_name:
                type: string
              email:
                type: string
              password:
                type: string
      responses:
        '201':
          description: Usuario creado correctamente
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/User'
        '500':
          description: Error al crear cliente
  /api/users/{id}:
    get: 
      summary: Obtener un usuario
      tags: 
        - Users
      parameters:
        - name: id
          in: path
          required: true
          schema:
            $type: String
          description: Id del usuario a buscar
      responses:
        '200':
          description: Usuario obtenido correctamente
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/User'

        '404':
          description: Usuario no existe

        '500':
          description: Error al obtener usuario

    put: 
      summary: Actualizar un usuario
      tags: 
        - Users
      parameters:
      - name: id
        in: path
        required: true
        schema:
          $type: String
        description: Id del usuario a actualizar
      - name: body
        in: body
        required: true
        shcema:
          type: object
          properties:
            first_name:
              type: String
            last_name:
              type: String
            email: 
              type: String
            password:
              type: String
      responses:
        '200':
          description: "Usuario actualizado correctamente"
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/User'
        '404':
          description: Usuario no encontrado
        '500':
          description: Error al actualizar usuario
    delete:
      summary: Eliminar un usuario
      tags: 
        - Users
      parameters:
        - name: id
          in: path
          required: true
          schema:
            $type: String
          description: Id del usuario a eliminar
      responses:
        responses:
        '200':
          description: "Usuario eliminado correctamente"
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/User'
        '404':
          description: Usuario no encontrado
        '500':
          description: Error al actualizar usuario


components:
  schemas:
    User:
      type: object
      properties:
        _id:
          type: ObjectId
          description: Id autogerado por MongoDB
        first_name:
          type: String
          description: Nombre de mi usuario
        last_name:
          type: String
          description: Apellido de mi usuario
        email:
          type: String
          description: Email de mi usuario
        password: 
          type: String
          description: Contrase√±a de mi usuario
        rol: 
          type: String
          description: Rol de mi usuario
      example:
        _id: ObjectId('1321ewew22')
        first_name: Pedro
        last_name: Parker
        email: pedro@parker.com
        password: Maria Jaine